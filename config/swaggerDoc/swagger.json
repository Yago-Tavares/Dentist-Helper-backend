{
    "swagger" : "2.0",
    "info" : {
      "description" : "A Web Development class project.",
      "version" : "1.0.0",
      "title" : "Dentist Helper",
      "license" : {
        "name" : "MIT",
        "url" : "https://opensource.org/licenses/MIT"
      }
    },
  
  
    "host" : "localhost:3030",
    "basePath" : "/",
    "tags" : [ {
      "name" : "Login",
      "description" : "API for users login in the system"
    },
    {
      "name": "User",
      "description":"API for users"

    },
    {
      "name": "Clinic",
      "description": "API for clinic"
    },
    {
      "name": "Dentist",
      "description": "API for dentist"
    },
    {
      "name": "Client",
      "description": "API for client"
    },
    {
      "name":"Procedure",
      "description": "API for procedures"
    } ],
    "schemes" : [ "http", "https" ],
    "consumes" : [ "application/json" ],
    "produces" : [ "application/json" ],
    "paths" : {
      
      "/login" : {
        "post" : {
          "type": "object",
          "tags" : [ "Login" ],
          "summary" : "Authenticate a user in the system",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "Username and Password",
            "description" : "User that we want to authenticate",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/Login"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Login OK",
              "schema" : {
                "$ref" : "#/definitions/Response"
              }
            }
          }
        }
      },

      "/forgot" : {
        "post" : {
          "type": "object",
          "tags" : [ "Login" ],
          "summary" : "Recover user password in the system",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "Email user",
            "description" : "User that wants to recover the password",
            "required" : true,
            "schema" : {
                "$ref" : "#/definitions/Request - Forgot Password"
              }
          } ],
          "responses" : {
            "200" : {
              "description" : "Um email foi enviado para User com mais instruções."
            },
            "400" : {
                "description": "Não existe uma conta com o endereço de e-mail inserido."
            }
          }
        }
      },
      
      "/reset/:token" : {
        "post" : {
          "type": "string",
          "tags" : [ "Login" ],
          "summary" : "Reset user password in the system",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "Password",
            "description" : "User that wants to reset the password",
            "required" : true,
            "schema" : {
                "$ref" : "#/definitions/Request - Reset Password"
              }
          },
          {
            "in" : "path",
            "name" : "token",
            "description" : "Update token to email",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "A senha foi alterada."
            },
            "400" : {
                "description" : "Token de recuperação de senha expirado ou inválido."
            }
          }
        }
      },

      "/password/:id" : {
        "put" : {
          "type": "string",
          "tags" : [ "Login" ],
          "summary" : "Update user password in the system",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "Old Password and New Password",
            "description" : "User that wants to update the password",
            "required" : true,
            "schema" : {
                "$ref" : "#/definitions/Request - Update Password"
              }
          },
          {
            "in" : "path",
            "name" : "id",
            "description" : "User ID",
            "required" : true
          } ],
          "responses" : {
            "201" : {
              "description" : "A senha foi alterada com sucesso."
            },
            "400" : {
                "description" : "A senha não foi alterada. Você deve informar corretamente a senha anterior."
            },
            "404" : {
                "description" : "Usuário não encontrado." 
            },
            "500" : {
                "description" : "Internal Server Error!" 
            }
          }
        }
      },

      "/register" : {
        "post" : {
          "type": "object",
          "tags" : [ "User" ],
          "summary" : "Register a user in the system",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "User",
            "description" : "User that we want to register",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/Register"
            }
          },
          {
            "in" : "header",
            "name" : "Authorization",
            "description" : "Token when logged in",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "user successfully registered",
              "schema" : {
                "$ref" : "#/definitions/Response"
              }
            },
            "400" : {
                "description": "Usuário já existe."
            }
          }
        }
      },

      "/clinic/{id}" : {
        "get" : {
          "type": "object",
          "tags" : [ "Clinic" ],
          "summary" : "Return clinic by ID",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "description" : "Token when logged in",
            "required" : true
          },
          {
            "in" : "path",
            "name" : "id",
            "description" : "Clinic ID",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "Clinics returned!"
            },
            "400" : {
                "description": "Error"
            }
          }
        },

        "delete" : {
          "type": "object",
          "tags" : [ "Clinic" ],
          "summary" : "Delete clinic by ID",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "description" : "Token when logged in",
            "required" : true
          },
          {
            "in" : "path",
            "name" : "id",
            "description" : "Clinic ID",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "Deletado com sucesso!"
            },
            "400" : {
                "description": "Falha ao remover."
            }
          }
        }
      },

      "/clinic" : {
        "get" : {
          "type": "object",
          "tags" : [ "Clinic" ],
          "summary" : "Return all clinics",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "description" : "Token when logged in",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "All clinics"
            },
            "400" : {
                "description": "Error"
            }
          }
        },

        "put" : {
          "type": "object",
          "tags" : [ "Clinic" ],
          "summary" : "Update clinic by ID",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "description" : "Token when logged in",
            "required" : true
          },
          {
            "in" : "body",
            "name" : "Update Clinic", 
            "required" : true,
            "schema" : {
              "required" : ["name", "email", "phone", "address" ],
              "properties" : {
                "name" : {
                  "type" : "string"
                },
                "email" : {
                  "type" : "string"
                },
                "phone" : {
                  "type" : "Number",
                  "format": "int64"
                },
                "address" : {
                  "type" : "string"
                }
              },
      
              "example" : {
                "name" : "Mega Dental",
                "email" : "email@email.com",
                "phone" : "99999-0000",
                "address" : "Rua do Sol - N° 101"
              }
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Atualizado com sucesso!"
            },
            "400" : {
                "description": "Falha ao atualizar."
            }
          }
        }

      },

      "/dentist/{id}" : {
        "get" : {
          "type": "object",
          "tags" : [ "Dentist" ],
          "summary" : "Return dentist by ID",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "description" : "Token when logged in",
            "required" : true
          },
          {
            "in" : "path",
            "name" : "id",
            "description" : "Dentist ID",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "Dentist returned!"
            },
            "400" : {
                "description": "Error"
            }
          }
        },

        "delete" : {
          "type": "object",
          "tags" : [ "Dentist" ],
          "summary" : "Delete dentist by ID",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "description" : "Token when logged in",
            "required" : true
          },
          {
            "in" : "path",
            "name" : "id",
            "description" : "Dentist ID",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "Deletado com sucesso!"
            },
            "400" : {
                "description": "Falha ao remover."
            }
          }
        }
      },

      "/dentist" : {
        "get" : {
          "type": "object",
          "tags" : [ "Dentist" ],
          "summary" : "Return all dentists",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "description" : "Token when logged in",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "All dentists"
            },
            "400" : {
                "description": "Error"
            }
          }
        },

        "put" : {
          "type": "object",
          "tags" : [ "Dentist" ],
          "summary" : "Update dentist by ID",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "description" : "Token when logged in",
            "required" : true
          },
          {
            "in" : "body",
            "name" : "Update dentist", 
            "required" : true,
            "schema" : {
              "required" : ["name", "email", "phone", "cpf", "rg", "cro" ],
              "properties" : {
                "name" : {
                  "type" : "string"
                },
                "email" : {
                  "type" : "string"
                },
                "phone" : {
                  "type" : "Number",
                  "format": "int64"
                },
                "cpf" : {
                  "type" : "string"
                },
                "rg" : {
                  "type" : "string"
                },
                "cro" : {
                  "type" : "string"
                }
              },
      
              "example" : {
                "name" : "Mega Dental",
                "email" : "email@email.com",
                "phone" : "99999-0000",
                "cpf" : "999.999.999-99",
                "rg" : "9999999",
                "cro" : "99999999"
              }
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Atualizado com sucesso!"
            },
            "400" : {
                "description": "Falha ao atualizar."
            }
          }
        }

      },

      "/client/{id}" : {
        "get" : {
          "type": "object",
          "tags" : [ "Client" ],
          "summary" : "Return client by ID",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "description" : "Token when logged in",
            "required" : true
          },
          {
            "in" : "path",
            "name" : "id",
            "description" : "Client ID",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "Clients returned!"
            },
            "400" : {
                "description": "Error"
            }
          }
        },

        "delete" : {
          "type": "object",
          "tags" : [ "Client" ],
          "summary" : "Delete client by ID",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "description" : "Token when logged in",
            "required" : true
          },
          {
            "in" : "path",
            "name" : "id",
            "description" : "Client ID",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "Deletado com sucesso!"
            },
            "400" : {
                "description": "Falha ao remover."
            }
          }
        }
      },

      "/client" : {
        "get" : {
          "type": "object",
          "tags" : [ "Client" ],
          "summary" : "Return all clients",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "description" : "Token when logged in",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "All clients"
            },
            "400" : {
                "description": "Error"
            }
          }
        },

        "put" : {
          "type": "object",
          "tags" : [ "Client" ],
          "summary" : "Update Client by ID",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "description" : "Token when logged in",
            "required" : true
          },
          {
            "in" : "body",
            "name" : "Update Client", 
            "required" : true,
            "schema" : {
              "required" : ["name", "email", "phone", "address", "cpf", "dentist", "allergies", "treatment_start_date", "treatment_end_date" ],
              "properties" : {
                "name" : {
                  "type" : "string"
                },
                "email" : {
                  "type" : "string"
                },
                "phone" : {
                  "type" : "Number",
                  "format": "int64"
                },
                "address" : {
                  "type" : "string"
                },
                "cpf" : {
                  "type" : "string"
                },
                "dentist" : {
                  "type" : "string"
                },
                "allergies" : {
                  "type" : "string"
                },
                "treatment_start_date" : {
                  "type" : "string"
                },
                "treatment_end_date" : {
                  "type" : "string"
                }
              },
      
              "example" : {
                "name" : "Mega Dental",
                "email" : "email@email.com",
                "phone" : "99999-0000",
                "address" : "Rua do Sol - N° 101",
                "cpf" : "999.999.999-99",
                "dentist" : "1",
                "allergies" : "Nenhuma",
                "treatment_start_date" : "10/10/2010",
                "treatment_end_date" : "10/10/2018"
              }
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Atualizado com sucesso!"
            },
            "400" : {
                "description": "Falha ao atualizar."
            }
          }
        }

      },

      "/dentist/list-client/{id}" : {
        "get" : {
          "type": "object",
          "tags" : [ "Client" ],
          "summary" : "Return all clients by Dentist ID",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "header",
            "name" : "Authorization",
            "description" : "Token when logged in",
            "required" : true
          },
          {
            "in" : "path",
            "name" : "id",
            "description" : "Dentist ID",
            "required" : true
          }  ],
          "responses" : {
            "200" : {
              "description" : "All clients"
            },
            "400" : {
                "description": "Error"
            }
          }
        }
      },

      "/procedure" : {
        "post" : {
          "type": "object",
          "tags" : [ "Procedure" ],
          "summary" : "Register a procedure in the system",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "Procedure",
            "description" : "Procedure that we want to register",
            "required" : true,
            "schema" : {
              "$ref":"#/definitions/Procedure"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Procedure successfully registered"
            },
            "400" : {
                "description": "Falha ao Salvar."
            }
          }
        },

        "get" : {
          "type": "object",
          "tags" : [ "Procedure" ],
          "summary" : "Return all procedures",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "All procedures"
            },
            "400" : {
                "description": "Error"
            }
          }
        },

        "put" : {
          "type": "object",
          "tags" : [ "Procedure" ],
          "summary" : "Update procedure in user",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "Update Procedure", 
            "required" : true,
            "schema" : {
              "$ref":"#/definitions/Procedure - UPDATE"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Atualizado com sucesso!"
            },
            "400" : {
                "description": "Falha ao atualizar."
            }
          }
        },

        "delete" : {
          "type": "object",
          "tags" : [ "Procedure" ],
          "summary" : "Delete procedure in the user",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "Deletado com sucesso!"
            },
            "400" : {
                "description": "Falha ao remover."
            }
          }
        }

      },

      "/procedure/{id}" : {
        "get" : {
          "type": "object",
          "tags" : [ "Procedure" ],
          "summary" : "Return procedure by ID",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "path",
            "name" : "id",
            "description" : "Procedure ID",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "Procedure returned!"
            },
            "400" : {
                "description": "Error"
            }
          }
        }
      },

      "/tooth" : {
        "post" : {
          "type": "object",
          "tags" : [ "Tooth" ],
          "summary" : "Register a tooth in the system",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "Tooth",
            "description" : "Tooth that we want to register",
            "required" : true,
            "schema" : {
              "$ref":"#/definitions/Tooth"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Tooth successfully registered"
            },
            "400" : {
                "description": "Anything is wrong. Try again."
            }
          }
        },

        "get" : {
          "type": "object",
          "tags" : [ "Tooth" ],
          "summary" : "Return all teeth",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "All teeth"
            },
            "400" : {
                "description": "Error"
            }
          }
        }
      },

      "/tooth/{id}" : {
        "get" : {
          "type": "object",
          "tags" : [ "Tooth" ],
          "summary" : "Return tooth by ID",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "path",
            "name" : "id",
            "description" : "Tooth ID",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "Tooth returned!"
            },
            "400" : {
                "description": "Error"
            }
          }
        },

        "delete" : {
          "type": "object",
          "tags" : [ "Tooth" ],
          "summary" : "Delete tooth in the user",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "path",
            "name" : "id",
            "description" : "Tooth ID",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "Deletado com sucesso!"
            },
            "400" : {
                "description": "Falha ao remover."
            }
          }
        },

        "put" : {
          "type": "object",
          "tags" : [ "Tooth" ],
          "summary" : "Update tooth in user",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "path",
            "name" : "id",
            "description" : "Tooth ID",
            "required" : true
            }, 
            {
            "in" : "body",
            "name" : "Update tooth", 
            "required" : true,
            "schema" : {
              "$ref":"#/definitions/Tooth - UPDATE"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "OK"
            },
            "400" : {
                "description": "Error 400"
            }
          }
        }
      }



    },

    "definitions" : {
        "Register" : {
        "required" : [ "name", "email", "password", "type" ],
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        },
        "example" : {
          "name" : "User",
          "email" : "user@email.com",
          "password": "user123",
          "type" : "CLIENT"
        }
        }, 

        "Login" : {
        "properties" : {
            "email" : {
              "type" : "string"
            },
            "password" : {
              "type" : "string"
            }
          },
          "example" : {
            "email" : "dales.fragoso@ccc.ufcg.edu.br",
            "password" : "12345"
          }
        },

        "Response" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "token" : "string"
        },
        "example" : {
          "user": {
            "name" : "User",
            "email" : "user@email.com",
            "password": "user123",
            "type" : "CLIENT"
          },
          "token": "string"
        }
        },

        "Request - Forgot Password" : {
            "properties" : {
                "email" : {
                    "type" : "string"
                }
            },

            "example" : {
                "email" : "user@email.com"
            }
        },

        "Request - Reset Password" : {
            "properties" : {
                "password" : {
                    "type" : "string"
                }
            },

            "example" : {
                "password" : "user123#$"
            }
        },

        "Request - Update Password" : {
            "properties" : {
                "oldPassword" : {
                    "type" : "string"
                },

                "newPassword" : {
                    "type" : "string"
                }
            },

            "example" : {
                "oldPassword" : "user123",
                "newPassword" : "user123#$"
            }
        },

        "Procedure" : {
        "required" : [ "type", "description", "teeth" ],
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "teeth" : {
            "type" : "array",
            "items" : "Integer"
          }
        },

        "example" : {
          "type" : "CIRURGIA",
          "description" : "Cirurgia no dente 22",
          "teeth" : [22]
        }
        },

        "Procedure - UPDATE" : {  
          "example" : {
            "type" : "Canal",
            "description" : "Canal no segundo molar",
            "teeth" : "[22]"
          }
        },

        "Tooth" : {
          "required" : [ "name", "client"],
          "properties" : {
            "name" : {
              "type" : "string"
            },
            "client" : {
              "type" : "objectId"
            }
          },
  
          "example" : {
            "name" : "22",
            "client" : "1"
          }
          },

          "Tooth - UPDATE" : {  
            "example" : {
              "type" : "INCISIVO",
              "specification" : "SUPERIOR ESQUERDO"
            }
          },

        "Clinic" : {
          "required" : [ "name", "email", "password", "phone", "address" ],
          "properties" : {
            "name" : {
              "type" : "string"
            },
            "email" : {
              "type" : "string"
            },
            "password" : {
              "type" : "Date"
            },
            "phone" : {
              "type" : "Number",
              "format": "int64"
            },
            "address" : {
              "type" : "string"
            }
          },
  
          "example" : {
            "name" : "Mega Dental",
            "email" : "email@email.com",
            "password": "clinica123",
            "phone" : "99999-0000",
            "address" : "Rua do Sol - N° 101"
          }
        }
    }
}